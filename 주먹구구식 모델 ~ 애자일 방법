주먹구구식 모델
- 공식적인 가이드라인이나 프로세스가 없는 개발 방식
- 즉흥적 소프트웨어 개발 또는 코딩과 수정 모델이라고도 한다.
- 코드를 작성해 제품을 만든 후 요구분석, 설계, 유지보수에 대해 생각
- 첫 번째 버전의 코드를 작성해 제품을 완성한 뒤 작성도니 코드에 문제가 있으면 수정해서 해결하고 문
  제가 없음 사용
 
선형 순차적 모델
 -소프트웨어 공학의 대명사로 여겨질 만큼 초기에 개발된 전통적인 모델
 
폭포수 모델의 개발 절차
 - 명세서를 기준으로 사용자에게 이상 유무를 확인 받고 다음 단계인 설계 절차로 넘어감
 
폭포수 모델의 장점
 - 관리가 용이
 - 체계적으로 문서화할 수 있음
 - 요구사항의 변화가 적은 프로젝트에 적합
 
V모델
 - 폭포수 모델의 변형, 테스트 단계를 추가 확장 후 테스트 단계가 어떻게 관련되는지를 나타냄
 - 각 개발 단계를 검증하는 데 초점을 두므로 오류를 줄일 수 있음
 
진화적 프로세스 모델주먹ㄱ
 - 새로운 요구가 수시로 발생해 신속하게 대응할 수 있는 방법
 - 초기 사용자 요구에 따라 가상으로 실핼되는 초기 버전의 프로토타입을 작성

프로토타입 모델의 개발
 - 개발자는 사용자의 초기 요구사항을 반영해 1차 프로토타입(입출력 화면)을 만들고 이를 사용사에게 보여줌
 
나선형 모델
- 계획 및 요구분석 단계
   - 사용자의 개발 의도를 파악해 해당 프로젝트의 목표를 명확히 하고, 여러 제약 조건의 대안을 고려
   - 사용자의 요구를 통해 파악 한 가능 요구사항과 성능 같은 비기능 요구사항을 정의하고 분석

- 위험 분석 단계
  - 프로젝트 수행에 방해되는 위험요소를 찾아 목록을 작성하고 위험에 대한예방 대책 논리
  - 심각한 위험이 존재하는 경우에는 해당 프로젝트를 계속 진행해도 되는지 결정

- 개발 단계
  - 프로토타입을 만드는데, 다른 소프트웨어 개발 프로세스의 설계와 구현에 해당

- 사용자 평가 단계
   - 사용자가 만족할 때까지 n번 반복해 더 이상 추가 및 수정 요구가 없으면 최종 제품 개발
   - 사용자 평가 단계는 진화적 프로토타입 모델에서 매우 핵심적이고 중료

단계적 개발 모델
  - 개발자가 먼저 릴리스 1을 개발해 사용자에게 제공하면 사용자가 이를 사용
  - 사용자가 릴리스 1을 사용하는 동안 개발자는 다음 버전인 릴리스 2를 개발
  - 개발과 사용을 병행하는 과정을 반복해 진행 하면서 완료
  - 릴리스를 구성하는 방법에 떄라 점증적 개발 방법과 반복적 개발 방법으로 나뉨
 
통합 프로세스 모델
  - 반복적 생명주기를 기반으로 하는 프로세스 모델 중 가장 많이 사용
  
애자일 프로세스 모델
 - 에자일 : 날렵한, 민첩한
 - 고객의 요구에 민첩하게 대응하고 그때그때 주어지는 문제를 풀어나가는 방법론
 
 애자일 방법론 : 스크럼
  -소프트웨어 개발보다는 팀의 개선과 프로젝트 관리에 중점을 둔 애자일 방법
 

 
 
