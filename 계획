계획
* 중요성 : 개발의 성패는 비용, 기간, 인력과 같은 자원을 토대로 계획을 잘 세우느냐에 달려있음

문제 정의
- 영역의 대한 배경 지식이 필요
- 개발 경험이 있는 분석가가 참여하는 것이 도움이 됨
- 문제 파악을 위해 현재 운영 중인 시스템을 사용
- 실무 담당자와 면담 후 자료를 바탕으로 분석하는 것이 필요


타당성 분석

1.경제성  
- 경졍자 입장에서 의사결정을 하는데 매우 중요한 요소
- 시장 분석을 통해 시장성을 확인
- 경제성 타당성 분석으로 투자 효율성과 시장성을 검증한 후 개발 여부 판단

2.기술적
- 사용자가 요구하는 프로젝트가 최신 기술이 필요하다면 기술력 타당성을 먼저 검토
- 요구하는 기술을 회사가 가지고 있는지 확인
- 부족하다면 필요한 기술을 갖고 있는 소프트웨어 개발자를 채용하거나 외주 개발로 해결

3.법적 타당성
- 오픈소스는 소프트웨어 개발에서 분쟁 발생 소지가 높음
- 소프트웨어 개발에서 오픈소스를 사용하는 것은 비용 절감 측면에서 매우 효율적
- 오픈소스는 원시 코드가 개방되어 있다는 것이지 아무렇게나 가져다 사용할 수 있는 것은 아님
- 법적인 문제가 발생하지 않으려면 오픈소스를 사용 할 때 어디까지 무료로 사용할 수 있는지 확인


개발 비용에 영향을 주는 요소

-프로그래머 자질 : 초금 프로그래머와 경험이 많은 프로그래머의 생산성에는 큰 차이가 있음

-소프트웨어 복잡도 : 브록스의 법칙 : 애플리케이션을 개발하는 것보다 유틸리티를 개발하는 것이 세 배 어렵고
,유틸리티를 개발하는 것보다 시스템 프로그램을 개발하는 것이 세 배 어렵다.

-소프트웨어 크기 : 개발하려는 소프트웨어의 규모가 크면 개발 인력과 기간도 늘고 복잡도도 커짐

-가용 시간
-관리자의 잘못된 생각 중 하나가 개발 기간을 단축하려면 인력과 자원을 늘리면 된다는 것
-보엠 : 정상적인 계획에서 최대 75%가 줄일 수 있는 한계

요구되는 신뢰도 수준 : 사고나 오류 발생 시 재산에 큰 손실을 끼치거나, 인명 피해가 발생할 수 있는 소프트
웨어는 개발 시 높은 신뢰도를 요구

기술 수준 : 소프트웨어 개발 시 고급 언어를 사용하면 저 수준 언어를 사용할 때 보다 프로그래머의 생산성이
5 ~ 10배 높아짐

비용 산정 기법 : 상향식
 -원시 코드 라인 수 기법 - LOC 기법
  추정 LOC : (낙관치+(4X중간치)+비관치)/6
 
  LOC기법의 비용 산정 공식
  예제
  1. 소프트웨어 개발 기간은 1년(12개월)이다. 5명의 개발자가 12개월 동안, 7명의 개발자가 5개월 동안 참여한다면
     이 소프트웨어 개발의 노력M/M는 얼마인가?
     
     (5명 * 12개월) + (7명 * 5개월) = 60M/M + 35M/M = 95M/M
     
  2. LOC 기법에 의해 예측한 총 라인이 50,000라인이고, 개발자가 10명 참여한다. 그리고 개발자들이 월 평균 500라인
     을 코딩 한다면 개발 기간은 얼마나 되는가?
     
     노력M/M = 원시 코드 라인 수 / 1인당 월 평균 생산 코드 라인 수 = 50,000라인/500라인=100M/M
     개발 기간 = M/M / 참여 인원 = 100M/M / 10명 = 10개월
    
  COCOMO
  노력 조정 수치가 반영된 노력(P/M)
  • 예제
    1. 만일 개발하려는 소프트웨어의 KDSI가 60이고, 소프트웨어는 중간형이며, 노력 조정 수치(EAF)가
       2.04라면 노력(E)는 얼마인가?
       
       PM = 3.0 * (KSDI)1.12 * EAF = 3.0 * (60)1.12 * 2.04 = 600.179
    
  ▪ 총 개발 기간 산정하기
  • 예제
    1. 만일 개발하려는 소프트웨어의 KDSI가 60이고, 소프트웨어는 중간형이며, 노력 조정 수치(EAF)가
       2.04라면 노력(E)=600.179이다. 이 때 총 개발기간은 얼마인가?
       
      TDEV = 2.5 * (PM)0.35 = 2.5 * (600.179)0.35 = 23.461

  기능 점수 기반 추정 모델
  가중치 반영 기능 점수 도출(가중치 단순일 경우)
  • UFP = (입력 개수 * 3) + (출력 개수 * 4) + (질의 개수 * 3) + (내부 파일 개수 * 7) + (인터페이스 파일 개수 * 5)
  
  ▪ 복잡도 계산
  • TCF = 0.65 + [(0.01) * (14개 기술적 복잡도 요인의 합)]
  
  ▪ 기능 점수
  • FP = UFP * TCF
  
  객체 점수 기반 추정 모델
  ▪ 추정방법
  • 문제 도메인에 있는 클래스의 개수를 추정
  • 사용자 입력의 종류를 분류. 가중치 정함(UI 없음 : 2.0, 단순한 텍스트 UI : 2.25, 그래픽 UI : 2.5, 복잡한 UI : 3.0)
  • ①단계 : 추정한 클래스 개수에 사용자 인터페이스 유형에 의한 가중치를 곱함
  • ②단계 : ①단계에서 구한 값에 클래스 개수를 더함
  • ③단계 : 추정한 총 클래스 개수에 생산성 추정값인 MD를 곱함


 일정 계획
 - 어떤 작업이 필요한지 찾은 후, 이를 진행할 순서를 결정하거나 주어진 개발 기간에 소 작업의
   개발 기간 및 그들 간의 순서, 필요한 자원 등과 같은 일정을 계획
 
 WBS - 프로젝트 목표를 달성하는데 필요한 활동과 업무를 세분화하는 작업
 
 일정 계획 기법 1 : 네트워크 차트
 
 네트워크 차트(pert/cpm)
 
 -개요 : wbs의 작업순서, 소요 기간 등을 네트워크 형태의 그래프로 표현한 후 일의 중요도와 일정 관리를 
         명확히 하는 데 사용
 -PERT : 프로그램을 평가하고 검토하는 프로젝트 관리 기법
 
 -cpm : 건설 공사와 같이 단위 작업이 확정적 소요 시간을 갖는 프로젝트인 경우에 적함
 
 -cpm 작업 과정 : 노드와 간선을 이용해 초기의 cpm 네트워크를 그림
 
  
  
