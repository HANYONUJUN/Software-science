아키텍처
- 건물의 특성을 결정짓는 기본 구조

아키텍쳐 설계
-복합성의 문제 : 대형 프로젝트는 전체 시스템의 구조를 생각하며 균형과 조화를 이루도록 설계

아키텍처의 필요성
- 잘 정의된 구조의 품질좋은 소프트웨어를 만들려면 소프트웨어 아키텍처가 필요

-아키텍처의 특징
 - 소프트웨어의 골격을 나타내는 추상화된 전체 구조를 제공

아키텍처 설계 시 고려 사항
- 모든 이해관계자 사이의 의사소통 도구로 활용할 수 있어야 함

아키텍처 품질 속성
-해당 프로젝트에서 중요하게 생각하는 품질 속성을 결정
-결정한 품질 속성을 어느 정도 수준으로 설계할 것인지 목표를 설정
-설정한 목표를 달성할 수 있는 방법을 서술
-품질 속성을 평가할 방법을 서술

시스템 품질 속성
-가용성
-시스템 실패 없이 시스템이 운용될 수 있는 확률로 시스템이 장애 발생 없이 서비스를 제공할 수 있는 능력

-변경 용이성
-사용자가 새로운 요구사항을 요청했을 때 얼마나 쉽게 변경할 수 있는지를 말함


-성능
-사용자 요청과 같은 이벤트가 발생했을 때 얼마나 빠르고 효율적으로 기능을 수행할 수 있는가를 말함

-보안성
-허용되지 않은 접근에 대응할 수 있는 능력

-사용성
-시스템을 사용할 때 발생할 수 있는 여러가지 상황을 극복할 수 있도록 이를 반영해 아키텍처 설계 작업을 해야

-테스트 용이성
-테스트 비용을 줄이기 위해서는 아키텍처 설계부터 테스트를 고려해야 함

-시장 적시성
- 적정한 시기에 소프트웨어를 출시해 경쟁력을 높이는 것

-비용과 이익
-아키텍처를 설계할 때 비용을 많이 들여 유연한 설계를 할 것인지, 비용을 절감해 이익을 높일 것인지 판단

-예상 시스템 수명
-시스템을 구축할 때는 시스템 사용 기간을 예측해 아키텍처 설계에 반영

-목표 시장
-목표 시장이 있는 소프트웨어는 경쟁 제품과 비교했을 때 기능성이 매우 중요

-비즈니스 품질 속성
 - 신규 발매 일정
   - 아키텍처 설계 시 유연성과 확장성을 중요하게 고려해야 함

- 기존 시스템과의 통합
  - 개발할 시스템을 기존 시스템과 통합해야 한다면 기존 시스템의 특성을 잘 파악해야 함
  
 -개념적 무결성
   - 시스템 설계는 전체 시스템을 나타내는 설계와 세부 구성 요소 실계로 나뉨
  
  -정확성과 완전성
   - 정확성과 완정성은 사용자가 요구하는 기능을 충족시키는 정도를 말하며 요구분석명세서와
   일치하는 정도를 나타냄
   
  -개발 용이성
   - 전체 시스템을 적절한 모듈로 분할한 후 알맞게 분배해 개발함으로써 정해진 기간 내에 개발을
   완성할 수 있고 개발 과정중에도 쉽게 변경 할 수 있는 능력을 말함 
